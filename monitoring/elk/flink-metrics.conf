input {
  kafka {
    bootstrap_servers => "{KAFKA_BROKERS}"
    topics => "flink-metrics"
  }
}
filter {
  json {
    source => "message"
    target => "metrics"
  }
  mutate {
    remove_field => [ "message" ]
  }
  if ([metrics][type] == "GAUGE") {
      if ("" in [metrics][values][value]) {
        mutate {
          add_field => {
            "%{[metrics][name]}_str" => "%{[metrics][values][value]}"
          }
        }
      } else if ([metrics][values][value]) {
        ruby {
          code => 'event.set(event.get("[metrics][name]"), event.get("[metrics][values][value]").to_f)'
        }
      }
  } else if ([metrics][type] == "METER") {
      ruby {
        code => 'event.set(event.get("[metrics][name]") + ".count", event.get("[metrics][values][count]").to_i)
                 event.set(event.get("[metrics][name]") + ".rate", event.get("[metrics][values][rate]").to_f)'
      }
  } else if ([metrics][type] == "COUNTER") {
      ruby {
        code => 'event.set(event.get("[metrics][name]") + ".count", event.get("[metrics][values][count]").to_i)'
      }
  } else if ([metrics][type] == "HISTOGRAM") {
      ruby {
        code => 'event.set(event.get("[metrics][name]") + ".count", event.get("[metrics][values][count]").to_i)
                 event.set(event.get("[metrics][name]") + ".max", event.get("[metrics][values][max]").to_i)
                 event.set(event.get("[metrics][name]") + ".mean", event.get("[metrics][values][mean]").to_f)
                 event.set(event.get("[metrics][name]") + ".min", event.get("[metrics][values][min]").to_i)
                 event.set(event.get("[metrics][name]") + ".p50", event.get("[metrics][values][p50]").to_i)
                 event.set(event.get("[metrics][name]") + ".p75", event.get("[metrics][values][p75]").to_i)
                 event.set(event.get("[metrics][name]") + ".p95", event.get("[metrics][values][p95]").to_i)
                 event.set(event.get("[metrics][name]") + ".p98", event.get("[metrics][values][p98]").to_i)
                 event.set(event.get("[metrics][name]") + ".p99", event.get("[metrics][values][p99]").to_i)
                 event.set(event.get("[metrics][name]") + ".p999", event.get("[metrics][values][p999]").to_i)
                 event.set(event.get("[metrics][name]") + ".size", event.get("[metrics][values][size]").to_i)
                 event.set(event.get("[metrics][name]") + ".stdDev", event.get("[metrics][values][stdDev]").to_f)'
      }
  }
  if ("" in [metrics][values][value]) {
      mutate {
        remove_field => [ "[metrics][values][value]" ]
      }
  }
  if ("" in [metrics][variables][<job_name>] and [metrics][variables][<subtask_index>]) {
    mutate {
      add_field => { "job_name_subtask_index" => "%{[metrics][variables][<job_name>]} %{[metrics][variables][<subtask_index>]}" }
    }
  }
}
output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "logstash_logs"
  }
}